-- Departamento
CREATE TABLE departamento (
    id_dep INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nome VARCHAR(100)
);
select * from departamento;

INSERT INTO departamento (nome) VALUES ('Departamento de Engenharia Elétrica');
INSERT INTO departamento (nome) VALUES ('Departamento de Engenharia de Computação');
INSERT INTO departamento (nome) VALUES ('Departamento de Cieência da Computação');
INSERT INTO departamento (nome) VALUES ('Departamento de Engenharia de Redes');
INSERT INTO departamento (nome) VALUES ('Departamento de Engenharia Mecatrônica');
INSERT INTO departamento (nome) VALUES ('Departamento de Engenharia Elétrica');

DELETE FROM departamento where id_dep = 1;




-- Usuário
CREATE TABLE usuario (
    matricula INT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    cpf VARCHAR(14) NOT NULL,
    email VARCHAR(30) NOT NULL,
    senha VARCHAR(20) NOT NULL,
    fotousuario BYTEA,
    UNIQUE (cpf, email)
);
SELECT * FROM usuario;

-- Aluno
CREATE TABLE aluno (
    curso VARCHAR(100) NOT NULL,
    ira FLOAT NOT NULL,
    data_ingresso DATE NOT NULL,
    idpesquisa INT,
    idbolsa INT,
    idusuario INT PRIMARY KEY
);
SELECT * FROM aluno;


CREATE TABLE professor (
    titulo VARCHAR(100),
    cargahoraria INT,
    idusuario INT PRIMARY KEY
);
SELECT * FROM professor;
-- Coordenador
CREATE TABLE coordenador (
    inicio_coordenador INT,
    fimmandato DATE NOT NULL,
    iddepartamento INT NOT NULL,
    idusuario INT PRIMARY KEY
);
select * from coordenador;
-- Área
CREATE TABLE area (
    idarea INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nomearea VARCHAR(100) NOT NULL
);
select * from area;
-- Especialidade
CREATE TABLE especialidade (
    idespecialidade INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nomeespecialidade VARCHAR(200) NOT NULL
);
SELECT * FROM especialidade;
-- Pesquisa
CREATE TABLE pesquisa (
    idpesquisa INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    datainicio DATE NOT NULL,
    datafim DATE NOT NULL,
    titulopesquisa VARCHAR(300) NOT NULL,
    relatorio BYTEA,
    estadopesquisa VARCHAR(50),
    vagasvoluntarias INT NOT NULL,
    vagasremuneradas INT NOT NULL
);
select * from pesquisa;
select * from bolsa;
-- Bolsa
CREATE TABLE bolsa (
    valor_bolsa FLOAT NOT NULL,
    idbolsa INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY
);
select * from pesquisa;
-- Revista
CREATE TABLE revista (
    isbn VARCHAR(20) PRIMARY KEY,
    titulo VARCHAR(100) NOT NULL,
    datapublicacao DATE NOT NULL
);
select * from revista;
-- Many-to-Many Tables (with composite PKs)
CREATE TABLE pertence (
    id_dep INT,
    matricula INT,
    PRIMARY KEY (id_dep, matricula)
);
select * from pertence;
CREATE TABLE tem (
    idarea INT,
    id_dep INT,
    PRIMARY KEY (idarea, id_dep)
);
select * from tem;
CREATE TABLE tem1 (
    idarea INT,
    idespecialidade INT,
    PRIMARY KEY (idarea, idespecialidade)
);
select * from tem1;
CREATE TABLE pertence1 (
    idespecialidade INT,
    idpesquisa INT,
    PRIMARY KEY (idespecialidade, idpesquisa)
);
select * from pertence1;
CREATE TABLE realiza (
    idpesquisa INT,
    idprofessor INT,
    PRIMARY KEY (idpesquisa, idprofessor)
);
select * from realiza
CREATE TABLE oferece (
    id_dep INT,
    idpesquisa INT,
    PRIMARY KEY (id_dep, idpesquisa)
);
select * from oferece;
CREATE TABLE disponibiliza (
    id_dep INT,
    idbolsa INT,
    PRIMARY KEY (id_dep, idbolsa)
);
select * from disponibiliza;
CREATE TABLE abrange (
    isbn VARCHAR(20),
    idarea INT,
    PRIMARY KEY (isbn, idarea)
);
select * from abrange;
CREATE TABLE publica (
    isbn VARCHAR(20),
    idpesquisa INT,
    PRIMARY KEY (isbn, idpesquisa)
);
select * from publica;
CREATE TABLE atuar (
    idarea INT,
    idprofessor INT,
    PRIMARY KEY (idarea, idprofessor)
);
select * from atuar;
CREATE TABLE solicita_pesquisa (
    idprofessor INT,
    id_dep INT,
    PRIMARY KEY (idprofessor, id_dep)
);
select * from solicita_pesquisa;
-- Foreign Keys
ALTER TABLE aluno
    ADD FOREIGN KEY (idpesquisa) REFERENCES pesquisa(idpesquisa),
    ADD FOREIGN KEY (idbolsa) REFERENCES bolsa(idbolsa),
    ADD FOREIGN KEY (idusuario) REFERENCES usuario(matricula);
select * from usuario;

INSERT INTO aluno (curso, ira, idpesquisa, idbolsa, idusuario, data_ingresso)
VALUES ('Engenharia de Computação', 4.23, NULL, NULL, 100, '2022-08-01'); 
SELECT * FROM aluno;
SELECT * FROM usuario;
INSERT INTO aluno (curso,ira,idpesquisa,idbolsa,idusuario) VALUES('Engenharia de Computação',4.23,NULL,NULL,100);

ALTER TABLE professor
    ADD FOREIGN KEY (idusuario) REFERENCES usuario(matricula);
select * from professor;
ALTER TABLE coordenador
    ADD FOREIGN KEY (iddepartamento) REFERENCES departamento(id_dep),
    ADD FOREIGN KEY (idusuario) REFERENCES usuario(matricula);
select * from coordenador;
-- FALTA ACIMA--
ALTER TABLE pertence
    ADD FOREIGN KEY (id_dep) REFERENCES departamento(id_dep)),
    ADD FOREIGN KEY (matricula) REFERENCES usuario(matricula);
select * from pertence;
ALTER TABLE tem
    ADD FOREIGN KEY (idarea) REFERENCES area(idarea),
    ADD FOREIGN KEY (id_dep) REFERENCES departamento(id_dep);
select * from tem;
ALTER TABLE tem1
    ADD FOREIGN KEY (idarea) REFERENCES area(idarea),
    ADD FOREIGN KEY (idespecialidade) REFERENCES especialidade(idespecialidade);
select * from tem1;
ALTER TABLE pertence1
    ADD FOREIGN KEY (idespecialidade) REFERENCES especialidade(idespecialidade),
    ADD FOREIGN KEY (idpesquisa) REFERENCES pesquisa(idpesquisa);
select * from pertence1;
ALTER TABLE realiza
    ADD FOREIGN KEY (idpesquisa) REFERENCES pesquisa(idpesquisa),
    ADD FOREIGN KEY (idprofessor) REFERENCES professor(idusuario);
select * from realiza;
-----------------------------
ALTER TABLE oferece
    ADD FOREIGN KEY (id_dep) REFERENCES departamento(id_dep),
    ADD FOREIGN KEY (idpesquisa) REFERENCES pesquisa(idpesquisa);
select * from oferece;
ALTER TABLE disponibiliza
    ADD FOREIGN KEY (id_dep) REFERENCES departamento(id_dep),
    ADD FOREIGN KEY (idbolsa) REFERENCES bolsa(idbolsa);
select * from disponibiliza;
ALTER TABLE abrange
    ADD FOREIGN KEY (isbn) REFERENCES revista(isbn),
    ADD FOREIGN KEY (idarea) REFERENCES area(idarea);
select * from abrange;
ALTER TABLE publica
    ADD FOREIGN KEY (isbn) REFERENCES revista(isbn),
    ADD FOREIGN KEY (idpesquisa) REFERENCES pesquisa(idpesquisa);
select * from publica;
ALTER TABLE atuar
    ADD FOREIGN KEY (idarea) REFERENCES area(idarea),
    ADD FOREIGN KEY (idprofessor) REFERENCES professor(idusuario);
select * from atuar;
ALTER TABLE solicita_pesquisa
    ADD FOREIGN KEY (idprofessor) REFERENCES professor(idusuario),
    ADD FOREIGN KEY (id_dep) REFERENCES departamento(id_dep);
select * from solicita_pesquisa;


----- CRIAÇÃO DE VIEW ----
CREATE VIEW alunos_com_bolsa AS
SELECT u.nome, u.email, a.curso, b.valor_bolsa
FROM aluno a
JOIN usuario u ON u.matricula = a.idusuario
JOIN bolsa b ON b.idbolsa = a.idbolsa;

--- CRIAÇÃO DE PROCEDURE ----
CREATE OR REPLACE FUNCTION cadastrar_aluno(
    p_matricula INT,
    p_nome VARCHAR,
    p_cpf VARCHAR,
    p_email VARCHAR,
    p_senha VARCHAR,
    p_curso VARCHAR,
    p_ira NUMERIC,
    p_data_ingresso DATE,
    p_idpesquisa INT DEFAULT NULL,
    p_idbolsa INT DEFAULT NULL
) RETURNS VOID AS $$
BEGIN
    INSERT INTO usuario (matricula, nome, cpf, email, senha)
    VALUES (p_matricula, p_nome, p_cpf, p_email, p_senha);

    INSERT INTO aluno (idusuario, curso, ira, data_ingresso, idpesquisa, idbolsa)
    VALUES (p_matricula, p_curso, p_ira, p_data_ingresso, p_idpesquisa, p_idbolsa);
END;
$$ LANGUAGE plpgsql;

SELECT cadastrar_aluno(
    200, 'Maria Silva', '12345678900', 'maria@email.com', 'senha123',
    'Engenharia da Computação', 8.75, '2022-03-01'
);

SELECT * FROM usuario,aluno WHERE aluno.idusuario = usuario.matricula;
select * from departamento;
select * from usuario as usu,aluno as al WHERE usu.matricula = al.idusuario;
